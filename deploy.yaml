---
- hosts: all
  vars:
    local_app_dir: "../sdcc-docker"
    remote_home: "/home/admin"
    remote_app_dir: "{{remote_home}}/docker"

  tasks:
#    - name: copy application directory
#      copy:
#        src: "{{ local_app_dir }}/"
#        dest: "{{ remote_app_dir }}"
#      register: app  # save task output 

    - name: Update apt cache
      become: yes
      apt:
        update_cache: yes
 
    - name: Update all packages to their latest version
      become: yes
      apt:
        upgrade: full

    - name: install needed packages
      become: yes # we need root privileges 
      apt:
        name: 
          - docker-compose
          - python3
          - python3-docker
          - python3-pip
          - rsync
        state: present

    - name: pip pip3 alias
      become: yes
      community.general.alternatives:
        link: /usr/bin/pip
        path: /usr/bin/pip3
        name: pip
        state: present

    - name: python python3 alias
      become: yes
      community.general.alternatives:
        link: /usr/bin/python
        path: /usr/bin/python3
        name: python
        state: present


#    - name: install docker-compose python module
#      become: yes
#      pip:
#        name: 
#          - docker-compose
#        state: present

    - name: sync dockefile
      synchronize:
        src: "{{ local_app_dir }}/"
        dest: "{{ remote_app_dir }}"
#      register: docker  # save task output 

    - name: docker-compose up
      become: yes
      community.docker.docker_compose:
        project_src: "{{remote_app_dir}}"
        state: present


#    - name: install Flask
#      become: yes 
#      pip:
#        name: flask
#        executable: pip3

#    - name: install boto3
#      become: yes 
#      pip:
#        name: boto3
#        executable: pip3

#    - name: copy systemd unit file
#      become: yes 
#      copy:
#        src: "photogallery.service"
#        dest: "/etc/systemd/system/"

#    - name: enable and start systemd service
#      become: yes 
#      systemd:
#        daemon_reload: yes
#        state: restarted
#        name: "photogallery.service"
#        enabled: yes
#      when: app.changed # only restart if new version was uploaded







